name: Node CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg15
        env:
          POSTGRES_DB: invoices
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Check for deprecated invoice routes
        run: node scripts/check-deprecated-invoices.js
      - name: Install backend deps
        run: cd backend && npm ci --legacy-peer-deps
      - name: Lint backend
        run: cd backend && npm run lint || true
      - name: Install frontend deps
        run: cd frontend && npm ci --legacy-peer-deps
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('frontend/package-lock.json') }}
      - name: Install Playwright browsers
        run: cd frontend && npx playwright install --with-deps
      - name: Frontend tests
        run: cd frontend && npm test -- --watchAll=false --testPathIgnorePatterns=visual.test.jsx
      - name: Backend tests
        run: cd backend && npm test
      - name: Playwright smoke tests
        run: cd frontend && npx playwright test
      - name: Visual regression tests
        if: github.event_name == 'pull_request'
        run: cd frontend && npm test src/components/__tests__/visual.pr.test.jsx
      - name: Build frontend
        run: cd frontend && npm run build
      - name: Lighthouse CI
        run: cd frontend && npx lhci autorun --config=lighthouserc.js
      - name: Verify deployed health
        run: curl -sSf https://clarifyops.com/api/health | jq -e '.ok == true'
